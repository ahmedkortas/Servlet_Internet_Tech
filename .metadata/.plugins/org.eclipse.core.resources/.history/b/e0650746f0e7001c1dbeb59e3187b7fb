
package jsf;



import java.io.Serializable;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.List;

import javax.enterprise.context.RequestScoped;
import javax.enterprise.context.SessionScoped;
import javax.faces.annotation.ManagedProperty;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.inject.Inject;
import javax.inject.Named;

import internet.Book;
import internet.DbConnection;
import internet.Customer;



@Named("checkOutHandler")
@SessionScoped
public class BestellHandler implements Serializable {
	@Inject
	@ManagedProperty("#{LoginHandler.client}")
	private Customer client;
	
	public Customer getClient() {
		return this.client;
	}
	public void setClient(Customer client) {
		this.client=client;
	}
	
	private static final long serialVersionUID = 1L;


//	Bestb�ch bb = new Bestb�ch();
//	Bestellung bes = new Bestellung();
	
	
	private String kreditkartennummer ="";
	private String zahlungsmethode = "";
	
	public String getZahlungsmethode() {
		return zahlungsmethode;
	}

	public void setZahlungsmethode(String zahlungsmethode) {
		this.zahlungsmethode = zahlungsmethode;
	}
	

	public String getKreditkartennummer() {
		return kreditkartennummer;
	}

	public void setKreditkartennummer(String kreditkartennummer) {
		this.kreditkartennummer = kreditkartennummer;
	}
	public String validatePayment() {
		
		System.out.println("validating");
		if(zahlungsmethode.equals("")) {
			System.out.println("hier");
			FacesContext.getCurrentInstance().addMessage("Methode", new FacesMessage(FacesMessage.SEVERITY_ERROR, "", "Sie m�ssen eine Zahlungsmethode w�hlen"));
			return null;
		}
		
		if(zahlungsmethode.equals("Kreditkarte")) {
			try {
				kreditkartennummer = kreditkartennummer.replaceAll(" ", "");
				System.out.println(kreditkartennummer.length());
				long number = Long.parseLong(kreditkartennummer);
				if(zahlungsmethode.equals("Kreditkarte") && kreditkartennummer.length() !=12) {
					System.out.println(kreditkartennummer.length());
					FacesContext.getCurrentInstance().addMessage("Methode:Kredit", new FacesMessage(FacesMessage.SEVERITY_ERROR, "", "Ung�ltige Kreditkartennummer"));
					return null;
				}
			}catch (NumberFormatException e) {
				System.out.println(kreditkartennummer);
				FacesContext.getCurrentInstance().addMessage("Methode:Kredit", new FacesMessage(FacesMessage.SEVERITY_ERROR, "", "Ung�ltige Kreditkartennummer"));
				return null;
			}
			confirmations(this.client.getOrderId(),this.client.getEmail,"kreditkate",1)
			System.out.println("Kreditkarte");
		}
		
		return "/Zusammenfassung.xhtml";
	}


	public void confirmations(int orderId,String ClientEmail,String zahlungsmethode,int status){
		
		DbConnection db = new DbConnection();
		db.payedOrder(orderId, ClientEmail,zahlungsmethode, status);
		
	}
	
	
}