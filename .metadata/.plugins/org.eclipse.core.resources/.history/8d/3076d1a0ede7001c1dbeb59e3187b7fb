
package jsf;



import java.io.Serializable;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.List;

import javax.enterprise.context.RequestScoped;
import javax.enterprise.context.SessionScoped;
import javax.faces.annotation.ManagedProperty;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.inject.Inject;
import javax.inject.Named;

import internet.Book;
import internet.DbConnection;
import internet.Customer;



@Named("checkOutHandler")
@SessionScoped
public class BestellHandler implements Serializable {
	@Inject
	@ManagedProperty("#{LoginHandler.client}")
	private Customer client;
	
	public Customer getClient() {
		return this.client;
	}
	public void setClient(Customer client) {
		this.client=client;
	}
	
	private static final long serialVersionUID = 1L;


//	Bestb�ch bb = new Bestb�ch();
//	Bestellung bes = new Bestellung();
	
	
	private String kreditkartennummer ="";
	private String zahlungsmethode = "";
	
	public String getZahlungsmethode() {
		return zahlungsmethode;
	}

	public void setZahlungsmethode(String zahlungsmethode) {
		this.zahlungsmethode = zahlungsmethode;
	}
	

	public String getKreditkartennummer() {
		return kreditkartennummer;
	}

	public void setKreditkartennummer(String kreditkartennummer) {
		this.kreditkartennummer = kreditkartennummer;
	}
	public String validatePayment() {
		
		
		if(zahlungsmethode.equals("")) {
			System.out.println("hier");
			FacesContext.getCurrentInstance().addMessage("Methode", new FacesMessage(FacesMessage.SEVERITY_ERROR, "", "Sie m�ssen eine Zahlungsmethode w�hlen"));
			return null;
		}
		
		if(zahlungsmethode.equals("Kreditkarte")) {
			try {
				kreditkartennummer = kreditkartennummer.replaceAll(" ", "");
				System.out.println(kreditkartennummer.length());
				long number = Long.parseLong(kreditkartennummer);
				if(zahlungsmethode.equals("Kreditkarte") && kreditkartennummer.length() !=12) {
					System.out.println(kreditkartennummer.length());
					FacesContext.getCurrentInstance().addMessage("Methode:Kredit", new FacesMessage(FacesMessage.SEVERITY_ERROR, "", "Ung�ltige Kreditkartennummer"));
					return null;
				}
			}catch (NumberFormatException e) {
				System.out.println(kreditkartennummer);
				FacesContext.getCurrentInstance().addMessage("Methode:Kredit", new FacesMessage(FacesMessage.SEVERITY_ERROR, "", "Ung�ltige Kreditkartennummer"));
				return null;
			}
			
			System.out.println("Kreditkarte");
		}
		
		return "/Zusammenfassung.xhtml";
	}
	
//	 public String dbEintragen(){
//		 
//		 DBVerbindung db = new DBVerbindung();
//		 db.verbinden();
//		 List<Buch> l = Database.getInstance().getKorbB�cher(updateKunde.getEmail());
//		 Database.getInstance().deletealleB�cher(updateKunde.getEmail());
//		 System.out.println(updateKunde.getEmail());
//		 
//		 int kundeID =db.getKundeID(updateKunde.getEmail());
//		 bes.setKunde_ID(kundeID);
//		 bes.setZahlungsmethode(zahlungsmethode);
//		 bes.setDatum(getDate());
//		 bes.setLieferAdresse(updateKunde.getAdresse());
//		 bes.setLieferPlz(updateKunde.getPlz());
//		 bes.setLieferOrt(updateKunde.getOrt());
//		 bes.setLieferLand(updateKunde.getLand());
//		 System.out.println(bes);
//		 db.BestellungEinfugen(bes);
//		 
//		 int bestNr = db.getBestNr(bes);
//		 for(Buch buch : l) {
//			 bb.setBestellNr(bestNr);
//			 bb.setIsbn(buch.getISBN());
//			 bb.setMenge(buch.getMenge());
//			 db.Bestb�chEinfugen(bb);
//			 System.out.println(bb);
//		 }
//		 
//		 if(zahlungsmethode.equals("Kreditkarte")) {
//			if(db.getKartenNr(kundeID, kreditkartennummer)==-1) 
//				db.kreditkarteEinfugen(kundeID, kreditkartennummer);
//				
//			db.kartenzahlungEinfugen(db.getKartenNr(kundeID, kreditkartennummer), bestNr);
//			 System.out.println(bes);
//		 }
//		 bes = new Bestellung();
//		 bb = new Bestb�ch();
//		 kreditkartennummer = "";
//		 zahlungsmethode = "";
//		 
//				 return "/Bestaetigungsseite.xhtml";
//		 
//	 }
//	 public Kunde getUpdateKunde() {
//		return updateKunde;
//	}
//
//	public void setUpdateKunde(Kunde updateKunde) {
//		this.updateKunde = updateKunde;
//	}

	public String getDate() {
		 SimpleDateFormat formatter= new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		 Date date = new Date(System.currentTimeMillis());
		 String datum =formatter.format(date);
		 System.out.println(datum);
		return datum;
	 }
	
	
}