package jsf;
import java.io.Serializable;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Logger;

import javax.enterprise.context.RequestScoped;
import javax.enterprise.context.SessionScoped;
import javax.faces.annotation.ManagedProperty;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.event.PhaseId;
import javax.faces.event.ValueChangeEvent;
import javax.inject.Inject;
import javax.inject.Named;


import internet.DbConnection;
import internet.Book;


@Named("LoginHandler")
@RequestScoped
public class LoginHandler implements Serializable { 


    private static final long serialVersionUID = 1L;
    private String username; 
    private String firstName;
    private String lastName;
    private String password;
    private String email;
    private String birthday;
    private String address;

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getBirthday() {
        return birthday;
    }

    public void setBirthday(String birthday) {
        this.birthday = birthday;
    }   
    
    public String login() {
		DbConnection db = new DbConnection();
		db.verbinden();
       
        
        
        if(Email ==""||password=="") {
        	 FacesContext.getCurrentInstance().addMessage("Form", new FacesMessage(FacesMessage.SEVERITY_ERROR, "", "F�llen sie E-mail und Passwort aus."));
        	return null;
        }else {
        	 if (db.verify(Email, password)) {
             	aktuellerKunde= db.getKunde(Email);
                return "index"    
             	FacesContext.getCurrentInstance().addMessage("Form", new FacesMessage(FacesMessage.SEVERITY_INFO, "", "Willkommen "+aktuellerKunde.getVorname()+" " +aktuellerKunde.getNachname()));
                 return null;
             }else {
            	 FacesContext.getCurrentInstance().addMessage("Form", new FacesMessage(FacesMessage.SEVERITY_ERROR, "", "E-mail oder Passwort falsch"));
            	 
             	
             }
        	
        }
        return null;
    }
    }

    public String register() throws ClassNotFoundException  {
        System.out.println("RegisterHandler.register()");
        System.out.println("username: " + firstName);
    	 DbConnection db = new DbConnection();
     	 if(firstName==""||lastName==""||password==""||email=="" || birthday==null || address=="") {
     	 	FacesContext.getCurrentInstance().addMessage("Form", new FacesMessage(FacesMessage.SEVERITY_ERROR, "", "F�llen sie alle Felder aus."));
     	return null;
     	 }
         else {
     	 	if(db.registerUser(firstName, lastName, password, email, birthday,address)) {
     	 		FacesContext.getCurrentInstance().addMessage("Form", new FacesMessage(FacesMessage.SEVERITY_INFO, "", "Registrierung erfolgreich"));
     	 	}else {
     	 		FacesContext.getCurrentInstance().addMessage("Form", new FacesMessage(FacesMessage.SEVERITY_ERROR, "", "Registrierung fehlgeschlagen"));
     	 	}
     	 }
        return "success";
    }

}