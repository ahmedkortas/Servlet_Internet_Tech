
 

package jsf;

import java.io.Serializable;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Logger;

import javax.enterprise.context.RequestScoped;
import javax.enterprise.context.SessionScoped;
import javax.faces.annotation.ManagedProperty;
import javax.faces.event.PhaseId;
import javax.faces.event.ValueChangeEvent;
import javax.inject.Inject;
import javax.inject.Named;

import internet.Book;
import internet.DbConnection;
import internet.Customer;
import internet.Genre;



@Named("WarenkorbHandler")
@SessionScoped
public class WarenkorbHandler {
	@Inject
	@ManagedProperty("#{LoginHandler.client}")
	private Customer client;
	private int orderId;

	private static DecimalFormat df = new DecimalFormat("0.00");
	private List<Book> bucher;

	public int getOrderId() {
		return orderId;
	}

	public void setOrderId(int orderId) {
		this.orderId = orderId;
	}

	public void getOrderIdForClient() {
		DbConnection db = new DbConnection();
		try {
			SetOrderId(db.getOrderId(client.getEmail));
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}


	public List<Genre> getGenres() throws ClassNotFoundException {
		DbConnection db = new DbConnection();
		List<Genre> li=null;
		try {
			li = db.getAllGenres();
		}catch(SQLException e) {
			System.out.println(e);
		}
		return li;
	}
	
	public Customer getClient() {
		System.out.println(this.client);
		return this.client;
	}

}
