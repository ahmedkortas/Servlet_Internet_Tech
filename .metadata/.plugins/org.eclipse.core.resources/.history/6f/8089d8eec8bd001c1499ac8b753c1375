package internet;

import java.io.*;
import java.sql.SQLException;

import javax.servlet.*;
import javax.servlet.http.*;

import java.util.Collections;
import java.util.List;
import java.util.Map.*;

// Extend HttpServlet class to create Http Servlet
public class addBook extends HttpServlet {

   /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String mymsg;
	private DbConnection cn=null;

   public void init() throws ServletException {
      mymsg = "Hello World!";
		DbConnection conn = null;
		try {
			conn = new DbConnection();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		this.cn = conn;	
   }
   
   
   protected void processRequest(HttpServletRequest request,HttpServletResponse response)throws ServletException, IOException{
               response.setContentType("text/html;charset=UTF-8");
               try (PrintWriter out = response.getWriter()) {
               out.println("<!DOCTYPE html>");
               out.println("<html>");
               out.println("<head>");
               out.println("<title>Add a book</title>");
               out.println("</head>");
               out.println("<body>");

               List<Genre> genreList = cn.getGenres();
               // Setting the attribute of the request object
               // which will be later fetched by a JSP page
               request.setAttribute("data", genreList);
               // Creating a RequestDispatcher object to dispatch
               // the request the request to another resource
               RequestDispatcher rd = 
               request.getRequestDispatcher("stdlist.jsp");
               // The request will be forwarded to the resource 
               // specified, here the resource is a JSP named,
               // "stdlist.jsp"
               rd.forward(request, response);
               out.println("</body>");
               out.println("</html>");
         }catch(Exception e){
            e.printStackTrace();
         }
}


public void doGet(HttpServletRequest request, 
      HttpServletResponse response)
      throws ServletException, IOException 
   {
	RequestDispatcher dispatcher = request.getRequestDispatcher("dummyTry.html");
	request.setAttribute("Name", "Temp");
	dispatcher.forward( request, response );
   }

   public void doPost(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException {
      //get the request body
      DbConnection conn = null;
	try {
		conn = new DbConnection();
		System.out.println("connected");
	} catch (ClassNotFoundException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();
	}
      List<String>	paramNames	=	Collections.list(request.getParameterNames());
      System.out.println(paramNames);
      String title	=	request.getParameter("title");
      String authorName	=	request.getParameter("authorName");
      String bookISBN	=	request.getParameter("bookISBN");
      String price	=	 request.getParameter("price");
      String description	=	request.getParameter("description");
      String genreName	=	request.getParameter("genreName");
      //convert price to double
      double priceDouble	=	Double.parseDouble(price);
      //check if other excist in the database table author by name
      //if not create new author
      //if yes get the author 
      int author_id = -1;
      try {
         author_id = cn.cheackAuthorAndCreate(authorName);
      } catch (SQLException e) {
         e.printStackTrace();
      }
      Book bookToBeAdded = new Book(title, author_id, bookISBN, priceDouble, description, genreName);
      //add the book to the database
      try {
         cn.addBook(bookToBeAdded);
      } catch (SQLException e) {
         e.printStackTrace();
      }    
   }
   



   public void destroy() {
      /* leaving empty for now this can be
       * used when we want to do something at the end
       * of Servlet life cycle
       */
   }
}